package co.com.tactusoft.crm.model.entities;

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * CrmUser generated by hbm2java
 */
@Entity
@Table(name = "crm_user", catalog = "crm_db", uniqueConstraints = @UniqueConstraint(columnNames = "username"))
public class CrmUser implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private BigDecimal id;
	private CrmDepartment crmDepartment;
	private CrmUser crmUserByIdUserCreate;
	private CrmUser crmUserByIdUserModified;
	private CrmBusinessGroup crmBusinessGroup;
	private String username;
	private String password;
	private String doc;
	private String names;
	private String surnames;
	private String email;
	private String phone;
	private String extension;
	private String extensionAgent;
	private int state;
	private Date dateCreate;
	private Date dateModified;
	private Set<CrmUserBranch> crmUserBranchs = new HashSet<CrmUserBranch>(0);
	private Set<CrmUserBranchPostsale> crmUserBranchPostales = new HashSet<CrmUserBranchPostsale>(
			0);
	private Set<CrmDoctor> crmDoctors = new HashSet<CrmDoctor>(0);
	private Set<CrmUserProfile> crmUserProfiles = new HashSet<CrmUserProfile>(0);
	private Set<CrmAppointment> crmAppointmentsForIdUserChecked = new HashSet<CrmAppointment>(
			0);
	private Set<CrmAppointment> crmAppointmentsForIdUserCanceled = new HashSet<CrmAppointment>(
			0);
	private Set<CrmAppointment> crmAppointmentsForIdUserCreate = new HashSet<CrmAppointment>(
			0);
	private Set<CrmPatient> crmPatientsForIdUserModified = new HashSet<CrmPatient>(
			0);
	private Set<CrmNurse> crmNurses = new HashSet<CrmNurse>(0);
	private Set<CrmAppointment> crmAppointmentsForIdUserModified = new HashSet<CrmAppointment>(
			0);
	private Set<CrmUserRole> crmUserRoles = new HashSet<CrmUserRole>(0);
	private Set<CrmPatient> crmPatientsForIdUserCreate = new HashSet<CrmPatient>(
			0);
	private Set<CrmCampaign> crmCampaigns = new HashSet<CrmCampaign>(0);

	public CrmUser() {
	}

	public CrmUser(BigDecimal id, CrmDepartment crmDepartment, String username,
			String password, String doc, String names, String surnames,
			String email, int state) {
		this.id = id;
		this.crmDepartment = crmDepartment;
		this.username = username;
		this.password = password;
		this.doc = doc;
		this.names = names;
		this.surnames = surnames;
		this.email = email;
		this.state = state;
	}

	public CrmUser(BigDecimal id, CrmDepartment crmDepartment, String username,
			String password, String doc, String names, String surnames,
			String email, String phone, String extension, int state,
			Set<CrmUserBranch> crmUserBranchs, Set<CrmDoctor> crmDoctors,
			Set<CrmUserProfile> crmUserProfiles,
			Set<CrmAppointment> crmAppointmentsForIdUserChecked,
			Set<CrmAppointment> crmAppointmentsForIdUserCanceled,
			Set<CrmAppointment> crmAppointmentsForIdUserCreate,
			Set<CrmPatient> crmPatientsForIdUserModified,
			Set<CrmNurse> crmNurses,
			Set<CrmAppointment> crmAppointmentsForIdUserModified,
			Set<CrmUserRole> crmUserRoles,
			Set<CrmPatient> crmPatientsForIdUserCreate) {
		this.id = id;
		this.crmDepartment = crmDepartment;
		this.username = username;
		this.password = password;
		this.doc = doc;
		this.names = names;
		this.surnames = surnames;
		this.email = email;
		this.phone = phone;
		this.extension = extension;
		this.state = state;
		this.crmUserBranchs = crmUserBranchs;
		this.crmDoctors = crmDoctors;
		this.crmUserProfiles = crmUserProfiles;
		this.crmAppointmentsForIdUserChecked = crmAppointmentsForIdUserChecked;
		this.crmAppointmentsForIdUserCanceled = crmAppointmentsForIdUserCanceled;
		this.crmAppointmentsForIdUserCreate = crmAppointmentsForIdUserCreate;
		this.crmPatientsForIdUserModified = crmPatientsForIdUserModified;
		this.crmNurses = crmNurses;
		this.crmAppointmentsForIdUserModified = crmAppointmentsForIdUserModified;
		this.crmUserRoles = crmUserRoles;
		this.crmPatientsForIdUserCreate = crmPatientsForIdUserCreate;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, scale = 0)
	public BigDecimal getId() {
		return this.id;
	}

	public void setId(BigDecimal id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_departament", nullable = false)
	public CrmDepartment getCrmDepartment() {
		return this.crmDepartment;
	}

	public void setCrmDepartment(CrmDepartment crmDepartment) {
		this.crmDepartment = crmDepartment;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_user_modified")
	public CrmUser getCrmUserByIdUserModified() {
		return this.crmUserByIdUserModified;
	}

	public void setCrmUserByIdUserModified(CrmUser crmUserByIdUserModified) {
		this.crmUserByIdUserModified = crmUserByIdUserModified;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_user_create")
	public CrmUser getCrmUserByIdUserCreate() {
		return this.crmUserByIdUserCreate;
	}

	public void setCrmUserByIdUserCreate(CrmUser crmUserByIdUserCreate) {
		this.crmUserByIdUserCreate = crmUserByIdUserCreate;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_business_group")
	public CrmBusinessGroup getCrmBusinessGroup() {
		return crmBusinessGroup;
	}

	public void setCrmBusinessGroup(CrmBusinessGroup crmBusinessGroup) {
		this.crmBusinessGroup = crmBusinessGroup;
	}

	@Column(name = "username", unique = true, nullable = false, length = 45)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", nullable = false, length = 45)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "doc", nullable = false, length = 45)
	public String getDoc() {
		return this.doc;
	}

	public void setDoc(String doc) {
		this.doc = doc;
	}

	@Column(name = "names", nullable = false)
	public String getNames() {
		return this.names;
	}

	public void setNames(String names) {
		this.names = names;
	}

	@Column(name = "surnames", nullable = false)
	public String getSurnames() {
		return this.surnames;
	}

	public void setSurnames(String surnames) {
		this.surnames = surnames;
	}

	@Column(name = "email", nullable = false, length = 1000)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "phone")
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "extension")
	public String getExtension() {
		return this.extension;
	}

	public void setExtension(String extension) {
		this.extension = extension;
	}

	@Column(name = "extension_agent")
	public String getExtensionAgent() {
		return extensionAgent;
	}

	public void setExtensionAgent(String extensionAgent) {
		this.extensionAgent = extensionAgent;
	}

	@Column(name = "state", nullable = false)
	public int getState() {
		return this.state;
	}

	public void setState(int state) {
		this.state = state;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_create", length = 19)
	public Date getDateCreate() {
		return this.dateCreate;
	}

	public void setDateCreate(Date dateCreate) {
		this.dateCreate = dateCreate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_modified", length = 19)
	public Date getDateModified() {
		return this.dateModified;
	}

	public void setDateModified(Date dateModified) {
		this.dateModified = dateModified;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "crmUser")
	public Set<CrmUserBranch> getCrmUserBranchs() {
		return this.crmUserBranchs;
	}

	public void setCrmUserBranchs(Set<CrmUserBranch> crmUserBranchs) {
		this.crmUserBranchs = crmUserBranchs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "crmUser")
	public Set<CrmUserBranchPostsale> getCrmUserBranchPostales() {
		return crmUserBranchPostales;
	}

	public void setCrmUserBranchPostales(
			Set<CrmUserBranchPostsale> crmUserBranchPostales) {
		this.crmUserBranchPostales = crmUserBranchPostales;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "crmUser")
	public Set<CrmDoctor> getCrmDoctors() {
		return this.crmDoctors;
	}

	public void setCrmDoctors(Set<CrmDoctor> crmDoctors) {
		this.crmDoctors = crmDoctors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "crmUser")
	public Set<CrmUserProfile> getCrmUserProfiles() {
		return this.crmUserProfiles;
	}

	public void setCrmUserProfiles(Set<CrmUserProfile> crmUserProfiles) {
		this.crmUserProfiles = crmUserProfiles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "crmUserByIdUserChecked")
	public Set<CrmAppointment> getCrmAppointmentsForIdUserChecked() {
		return this.crmAppointmentsForIdUserChecked;
	}

	public void setCrmAppointmentsForIdUserChecked(
			Set<CrmAppointment> crmAppointmentsForIdUserChecked) {
		this.crmAppointmentsForIdUserChecked = crmAppointmentsForIdUserChecked;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "crmUserByIdUserCanceled")
	public Set<CrmAppointment> getCrmAppointmentsForIdUserCanceled() {
		return this.crmAppointmentsForIdUserCanceled;
	}

	public void setCrmAppointmentsForIdUserCanceled(
			Set<CrmAppointment> crmAppointmentsForIdUserCanceled) {
		this.crmAppointmentsForIdUserCanceled = crmAppointmentsForIdUserCanceled;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "crmUserByIdUserCreate")
	public Set<CrmAppointment> getCrmAppointmentsForIdUserCreate() {
		return this.crmAppointmentsForIdUserCreate;
	}

	public void setCrmAppointmentsForIdUserCreate(
			Set<CrmAppointment> crmAppointmentsForIdUserCreate) {
		this.crmAppointmentsForIdUserCreate = crmAppointmentsForIdUserCreate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "crmUserByIdUserModified")
	public Set<CrmPatient> getCrmPatientsForIdUserModified() {
		return this.crmPatientsForIdUserModified;
	}

	public void setCrmPatientsForIdUserModified(
			Set<CrmPatient> crmPatientsForIdUserModified) {
		this.crmPatientsForIdUserModified = crmPatientsForIdUserModified;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "crmUser")
	public Set<CrmNurse> getCrmNurses() {
		return this.crmNurses;
	}

	public void setCrmNurses(Set<CrmNurse> crmNurses) {
		this.crmNurses = crmNurses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "crmUserByIdUserModified")
	public Set<CrmAppointment> getCrmAppointmentsForIdUserModified() {
		return this.crmAppointmentsForIdUserModified;
	}

	public void setCrmAppointmentsForIdUserModified(
			Set<CrmAppointment> crmAppointmentsForIdUserModified) {
		this.crmAppointmentsForIdUserModified = crmAppointmentsForIdUserModified;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "crmUser")
	public Set<CrmUserRole> getCrmUserRoles() {
		return this.crmUserRoles;
	}

	public void setCrmUserRoles(Set<CrmUserRole> crmUserRoles) {
		this.crmUserRoles = crmUserRoles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "crmUserByIdUserCreate")
	public Set<CrmPatient> getCrmPatientsForIdUserCreate() {
		return this.crmPatientsForIdUserCreate;
	}

	public void setCrmPatientsForIdUserCreate(
			Set<CrmPatient> crmPatientsForIdUserCreate) {
		this.crmPatientsForIdUserCreate = crmPatientsForIdUserCreate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "crmUser")
	public Set<CrmCampaign> getCrmCampaigns() {
		return crmCampaigns;
	}

	public void setCrmCampaigns(Set<CrmCampaign> crmCampaigns) {
		this.crmCampaigns = crmCampaigns;
	}

	@Override
	public boolean equals(Object rhs) {
		if (rhs instanceof CrmUser) {
			return username.equals(((CrmUser) rhs).username);
		}
		return false;
	}

	@Override
	public int hashCode() {
		return username.hashCode();
	}

	@Override
	public String toString() {
		return username;
	}

}
